# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Company implements Node {
  id: ID!
  name: String!
  url: String!
  logo: String
  employees: String
  tranch: String
  description: String!
  location: String
  address: String
  jobs: String
  jobslink: String
  sector: String
  twitter: String
  facebook: String
  instagram: String
  youtube: String
}

type Post implements Node {
  id: ID!
  isPublished: Boolean!
  title: String!
  text: String!
}


#
# Other Types
#

type AggregateCompany {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type CompanyConnection {
  pageInfo: PageInfo!
  edges: [CompanyEdge]!
  aggregate: AggregateCompany!
}

input CompanyCreateInput {
  name: String!
  url: String!
  logo: String
  employees: String
  tranch: String
  description: String!
  location: String
  address: String
  jobs: String
  jobslink: String
  sector: String
  twitter: String
  facebook: String
  instagram: String
  youtube: String
}

type CompanyEdge {
  node: Company!
  cursor: String!
}

enum CompanyOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  url_ASC
  url_DESC
  logo_ASC
  logo_DESC
  employees_ASC
  employees_DESC
  tranch_ASC
  tranch_DESC
  description_ASC
  description_DESC
  location_ASC
  location_DESC
  address_ASC
  address_DESC
  jobs_ASC
  jobs_DESC
  jobslink_ASC
  jobslink_DESC
  sector_ASC
  sector_DESC
  twitter_ASC
  twitter_DESC
  facebook_ASC
  facebook_DESC
  instagram_ASC
  instagram_DESC
  youtube_ASC
  youtube_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CompanyPreviousValues {
  id: ID!
  name: String!
  url: String!
  logo: String
  employees: String
  tranch: String
  description: String!
  location: String
  address: String
  jobs: String
  jobslink: String
  sector: String
  twitter: String
  facebook: String
  instagram: String
  youtube: String
}

type CompanySubscriptionPayload {
  mutation: MutationType!
  node: Company
  updatedFields: [String!]
  previousValues: CompanyPreviousValues
}

input CompanySubscriptionWhereInput {
  AND: [CompanySubscriptionWhereInput!]
  OR: [CompanySubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CompanyWhereInput
}

input CompanyUpdateInput {
  name: String
  url: String
  logo: String
  employees: String
  tranch: String
  description: String
  location: String
  address: String
  jobs: String
  jobslink: String
  sector: String
  twitter: String
  facebook: String
  instagram: String
  youtube: String
}

input CompanyWhereInput {
  AND: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  logo: String
  logo_not: String
  logo_in: [String!]
  logo_not_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_gt: String
  logo_gte: String
  logo_contains: String
  logo_not_contains: String
  logo_starts_with: String
  logo_not_starts_with: String
  logo_ends_with: String
  logo_not_ends_with: String
  employees: String
  employees_not: String
  employees_in: [String!]
  employees_not_in: [String!]
  employees_lt: String
  employees_lte: String
  employees_gt: String
  employees_gte: String
  employees_contains: String
  employees_not_contains: String
  employees_starts_with: String
  employees_not_starts_with: String
  employees_ends_with: String
  employees_not_ends_with: String
  tranch: String
  tranch_not: String
  tranch_in: [String!]
  tranch_not_in: [String!]
  tranch_lt: String
  tranch_lte: String
  tranch_gt: String
  tranch_gte: String
  tranch_contains: String
  tranch_not_contains: String
  tranch_starts_with: String
  tranch_not_starts_with: String
  tranch_ends_with: String
  tranch_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  jobs: String
  jobs_not: String
  jobs_in: [String!]
  jobs_not_in: [String!]
  jobs_lt: String
  jobs_lte: String
  jobs_gt: String
  jobs_gte: String
  jobs_contains: String
  jobs_not_contains: String
  jobs_starts_with: String
  jobs_not_starts_with: String
  jobs_ends_with: String
  jobs_not_ends_with: String
  jobslink: String
  jobslink_not: String
  jobslink_in: [String!]
  jobslink_not_in: [String!]
  jobslink_lt: String
  jobslink_lte: String
  jobslink_gt: String
  jobslink_gte: String
  jobslink_contains: String
  jobslink_not_contains: String
  jobslink_starts_with: String
  jobslink_not_starts_with: String
  jobslink_ends_with: String
  jobslink_not_ends_with: String
  sector: String
  sector_not: String
  sector_in: [String!]
  sector_not_in: [String!]
  sector_lt: String
  sector_lte: String
  sector_gt: String
  sector_gte: String
  sector_contains: String
  sector_not_contains: String
  sector_starts_with: String
  sector_not_starts_with: String
  sector_ends_with: String
  sector_not_ends_with: String
  twitter: String
  twitter_not: String
  twitter_in: [String!]
  twitter_not_in: [String!]
  twitter_lt: String
  twitter_lte: String
  twitter_gt: String
  twitter_gte: String
  twitter_contains: String
  twitter_not_contains: String
  twitter_starts_with: String
  twitter_not_starts_with: String
  twitter_ends_with: String
  twitter_not_ends_with: String
  facebook: String
  facebook_not: String
  facebook_in: [String!]
  facebook_not_in: [String!]
  facebook_lt: String
  facebook_lte: String
  facebook_gt: String
  facebook_gte: String
  facebook_contains: String
  facebook_not_contains: String
  facebook_starts_with: String
  facebook_not_starts_with: String
  facebook_ends_with: String
  facebook_not_ends_with: String
  instagram: String
  instagram_not: String
  instagram_in: [String!]
  instagram_not_in: [String!]
  instagram_lt: String
  instagram_lte: String
  instagram_gt: String
  instagram_gte: String
  instagram_contains: String
  instagram_not_contains: String
  instagram_starts_with: String
  instagram_not_starts_with: String
  instagram_ends_with: String
  instagram_not_ends_with: String
  youtube: String
  youtube_not: String
  youtube_in: [String!]
  youtube_not_in: [String!]
  youtube_lt: String
  youtube_lte: String
  youtube_gt: String
  youtube_gte: String
  youtube_contains: String
  youtube_not_contains: String
  youtube_starts_with: String
  youtube_not_starts_with: String
  youtube_ends_with: String
  youtube_not_ends_with: String
}

input CompanyWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createPost(data: PostCreateInput!): Post!
  createCompany(data: CompanyCreateInput!): Company!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateCompany(data: CompanyUpdateInput!, where: CompanyWhereUniqueInput!): Company
  deletePost(where: PostWhereUniqueInput!): Post
  deleteCompany(where: CompanyWhereUniqueInput!): Company
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertCompany(where: CompanyWhereUniqueInput!, create: CompanyCreateInput!, update: CompanyUpdateInput!): Company!
  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!
  updateManyCompanies(data: CompanyUpdateInput!, where: CompanyWhereInput!): BatchPayload!
  deleteManyPosts(where: PostWhereInput!): BatchPayload!
  deleteManyCompanies(where: CompanyWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  isPublished: Boolean
  title: String!
  text: String!
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  isPublished_ASC
  isPublished_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PostPreviousValues {
  id: ID!
  isPublished: Boolean!
  title: String!
  text: String!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  AND: [PostSubscriptionWhereInput!]
  OR: [PostSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

input PostUpdateInput {
  isPublished: Boolean
  title: String
  text: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  isPublished: Boolean
  isPublished_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company]!
  post(where: PostWhereUniqueInput!): Post
  company(where: CompanyWhereUniqueInput!): Company
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  companiesConnection(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CompanyConnection!
  node(id: ID!): Node
}

type Subscription {
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  company(where: CompanySubscriptionWhereInput): CompanySubscriptionPayload
}
